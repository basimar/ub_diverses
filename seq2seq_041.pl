#! /usr/bin/perl

use warnings;
use strict;
use Data::Dumper;

die "Argumente: $0 Input \n" unless @ARGV == 1;

my($inputfile) = @ARGV;

open my $in, "<", $inputfile or die "$0: open $inputfile: $!";

my %subfields;
my %oldsubfields;

my @languages = (
    "aar",
    "abk",
    "ace",
    "ach",
    "ada",
    "ady",
    "afa",
    "afh",
    "afr",
    "ain",
    "aka",
    "akk",
    "alb",
    "ale",
    "alg",
    "alt",
    "amh",
    "ang",
    "anp",
    "apa",
    "ara",
    "arc",
    "arg",
    "arm",
    "arn",
    "arp",
    "art",
    "arw",
    "asm",
    "ast",
    "ath",
    "aus",
    "ava",
    "ave",
    "awa",
    "aym",
    "aze",
    "bad",
    "bai",
    "bak",
    "bal",
    "bam",
    "ban",
    "baq",
    "bas",
    "bat",
    "bej",
    "bel",
    "bem",
    "ben",
    "ber",
    "bho",
    "bih",
    "bik",
    "bin",
    "bis",
    "bla",
    "bnt",
    "bos",
    "bra",
    "bre",
    "btk",
    "bua",
    "bug",
    "bul",
    "bur",
    "byn",
    "cad",
    "cai",
    "car",
    "cat",
    "cau",
    "ceb",
    "cel",
    "cha",
    "chb",
    "che",
    "chg",
    "chi",
    "chk",
    "chm",
    "chn",
    "cho",
    "chp",
    "chr",
    "chu",
    "chv",
    "chy",
    "cmc",
    "cnr",
    "cop",
    "cor",
    "cos",
    "cpe",
    "cpf",
    "cpp",
    "cre",
    "crh",
    "crp",
    "csb",
    "cus",
    "cze",
    "dak",
    "dan",
    "dar",
    "day",
    "del",
    "den",
    "dgr",
    "din",
    "div",
    "doi",
    "dra",
    "dsb",
    "dua",
    "dum",
    "dut",
    "dyu",
    "dzo",
    "efi",
    "egy",
    "eka",
    "elx",
    "eng",
    "enm",
    "epo",
    "est",
    "ewe",
    "ewo",
    "fan",
    "fao",
    "fat",
    "fij",
    "fil",
    "fin",
    "fiu",
    "fon",
    "fre",
    "frm",
    "fro",
    "frr",
    "frs",
    "fry",
    "ful",
    "fur",
    "gaa",
    "gay",
    "gba",
    "gem",
    "geo",
    "ger",
    "gez",
    "gil",
    "gla",
    "gle",
    "glg",
    "glv",
    "gmh",
    "goh",
    "gon",
    "gor",
    "got",
    "grb",
    "grc",
    "gre",
    "grn",
    "gsw",
    "guj",
    "gwi",
    "hai",
    "hat",
    "hau",
    "haw",
    "heb",
    "her",
    "hil",
    "him",
    "hin",
    "hit",
    "hmn",
    "hmo",
    "hrv",
    "hsb",
    "hun",
    "hup",
    "iba",
    "ibo",
    "ice",
    "ido",
    "iii",
    "ijo",
    "iku",
    "ile",
    "ilo",
    "ina",
    "inc",
    "ind",
    "ine",
    "inh",
    "ipk",
    "ira",
    "iro",
    "ita",
    "jav",
    "jbo",
    "jpn",
    "jpr",
    "jrb",
    "kaa",
    "kab",
    "kac",
    "kal",
    "kam",
    "kan",
    "kar",
    "kas",
    "kau",
    "kaw",
    "kaz",
    "kbd",
    "kha",
    "khi",
    "khm",
    "kho",
    "kik",
    "kin",
    "kir",
    "kmb",
    "kok",
    "kom",
    "kon",
    "kor",
    "kos",
    "kpe",
    "krc",
    "krl",
    "kro",
    "kru",
    "kua",
    "kum",
    "kur",
    "kut",
    "lad",
    "lah",
    "lam",
    "lao",
    "lat",
    "lav",
    "lez",
    "lim",
    "lin",
    "lit",
    "lol",
    "loz",
    "ltz",
    "lua",
    "lub",
    "lug",
    "lui",
    "lun",
    "luo",
    "lus",
    "mac",
    "mad",
    "mag",
    "mah",
    "mai",
    "mak",
    "mal",
    "man",
    "mao",
    "map",
    "mar",
    "mas",
    "may",
    "mdf",
    "mdr",
    "men",
    "mga",
    "mic",
    "min",
    "mis",
    "mkh",
    "mlg",
    "mlt",
    "mnc",
    "mni",
    "mno",
    "moh",
    "mon",
    "mos",
    "mul",
    "mun",
    "mus",
    "mwl",
    "mwr",
    "myn",
    "myv",
    "nah",
    "nai",
    "nap",
    "nau",
    "nav",
    "nbl",
    "nde",
    "ndo",
    "nds",
    "nep",
    "new",
    "nia",
    "nic",
    "niu",
    "nno",
    "nob",
    "nog",
    "non",
    "nor",
    "nqo",
    "nso",
    "nub",
    "nwc",
    "nya",
    "nym",
    "nyn",
    "nyo",
    "nzi",
    "oci",
    "oji",
    "ori",
    "orm",
    "osa",
    "oss",
    "ota",
    "oto",
    "paa",
    "pag",
    "pal",
    "pam",
    "pan",
    "pap",
    "pau",
    "peo",
    "per",
    "phi",
    "phn",
    "pli",
    "pol",
    "pon",
    "por",
    "pra",
    "pro",
    "pus",
    "que",
    "raj",
    "rap",
    "rar",
    "roa",
    "roh",
    "rom",
    "rum",
    "run",
    "rup",
    "rus",
    "sad",
    "sag",
    "sah",
    "sai",
    "sal",
    "sam",
    "san",
    "sas",
    "sat",
    "scn",
    "sco",
    "sel",
    "sem",
    "sga",
    "sgn",
    "shn",
    "sid",
    "sin",
    "sio",
    "sit",
    "sla",
    "slo",
    "slv",
    "sma",
    "sme",
    "smi",
    "smj",
    "smn",
    "smo",
    "sms",
    "sna",
    "snd",
    "snk",
    "sog",
    "som",
    "son",
    "sot",
    "spa",
    "srd",
    "srn",
    "srp",
    "srr",
    "ssa",
    "ssw",
    "suk",
    "sun",
    "sus",
    "sux",
    "swa",
    "swe",
    "syc",
    "syr",
    "tah",
    "tai",
    "tam",
    "tat",
    "tel",
    "tem",
    "ter",
    "tet",
    "tgk",
    "tgl",
    "tha",
    "tib",
    "tig",
    "tir",
    "tiv",
    "tkl",
    "tlh",
    "tli",
    "tmh",
    "tog",
    "ton",
    "tpi",
    "tsi",
    "tsn",
    "tso",
    "tuk",
    "tum",
    "tup",
    "tur",
    "tut",
    "tvl",
    "twi",
    "tyv",
    "udm",
    "uga",
    "uig",
    "ukr",
    "umb",
    "und",
    "urd",
    "uzb",
    "vai",
    "ven",
    "vie",
    "vol",
    "vot",
    "wak",
    "wal",
    "war",
    "was",
    "wel",
    "wen",
    "wln",
    "wol",
    "xal",
    "xho",
    "yao",
    "yap",
    "yid",
    "yor",
    "ypk",
    "zap",
    "zbl",
    "zen",
    "zha",
    "znd",
    "zul",
    "zun",
    "zxx",
    "zza",
);
while (my $line = <$in>) {
    chomp $line;
    my $sysnumber = (substr $line , 0, 9);
    my $tag = (substr $line , 10, 5);
    my $subfields = (substr $line, 15);

    my $newline;

    # Feld 041 aufsplitten in Unterfelder (Feldtrennung $$)
    my @subfields = split(/\$\$/, $line);
    shift @subfields;
    $newline = $sysnumber . " " . $tag . " L ";

    # $false ist wahr, falls in einem alten 041-Feld falsche Sprachcodes vorkommen
    my $false;
    # $correct ist wahr, falls gültige alte Sprachcodes korrigiert werden müssen
    my $correct = 1;

    if ($tag =~ /^041/ ) {

        for (@subfields) {
            # Fall 1: Unterfeld mit ungültiger Unterfeldkennung 
            if (!($_ =~ /^(a|b|d|e|f|g|h|j|2|6|8)/)) {
                #print $line . "\n";
                $subfields{$subfields}++;
                $newline .= '$$' . $_;
                $correct = 0;

            # Fall 2: Unterfeld besteht nicht aus 4 Buchstaben besteht (Unterfeldkennung + 3stelliger Sprachcode)
            } elsif (!($_ =~ /^....$/)) {
                my $oldindikator = substr($_,0,1);
                my $oldsubfield = substr($_,1);
                # Unterfelder mit mehr oder weniger als 3stelligen Sprachcodes werden in Dreierpäcken aufgeteilt
                my @oldsubfields = ( $oldsubfield =~ m/.../g );
                for (@oldsubfields) {
                    unless ($_ ~~ @languages) {
                        $false = 1;
                        $correct = 0;
                        $newline .= '$$' . $oldindikator . $_;
                    } else {
                        $newline .= '$$' . $oldindikator . $_;
                    }
                }
                #Falls in einem Unterfeld von 041 mehrere gültige Sprachcodes vorhanden sind ($$agerlateng), gebe sie nur auf der Liste oldsubfields aus, nicht auf subfields
                print $line . "\n" unless $false;
                $subfields{$subfields}++ if $false;
                $oldsubfields{$subfields}++ unless $false;

            # Fall 3: Sprachcode entspricht nicht der gültigen Liste entspricht
            } elsif (!(substr($_,1) ~~ @languages)) {
                #print $line . "\n";
                $subfields{$subfields}++;
                $newline .= '$$' . $_;
                $correct = 0;
            # Fall 4: Alles OK (Gültige Unterfeldkennung, gültige Länge, gültiger Sprachcode)
            } else {
                $newline .= '$$' . $_;
                $correct = 0;
            }
        }
        #print $line . "\n" if $correct;
        #print $newline . "\n" if $correct;
    }
}

#foreach my $name (sort { $subfields{$a} <=> $subfields{$b} } keys %subfields) {
#    printf "%-8s %s\n", $name, $subfields{$name};
#}

#foreach my $oldname (sort { $oldsubfields{$a} <=> $oldsubfields{$b} } keys %oldsubfields) {
#    printf "%-8s %s\n", $oldname, $oldsubfields{$oldname};
#}



